/* Container for the carousel and arrows */
.carousel-wrapper {
    position: relative;
    overflow: hidden;
    /* ðŸš¨ FIX 1: REMOVE vertical padding here. We will use absolute positioning to handle spacing. */
    padding: 0; 
    
    /* ðŸš¨ FIX 2: Set height based only on the card height + necessary vertical buffer (e.g., 20px on top/bottom) */
    /* Card height is 180px + 40px buffer = 220px */
    min-height: 440px; 
}

/* The view area for the carousel, setting the stage */
.group-carousel {
    display: flex; 
    scroll-behavior: smooth; 
    transition: transform 0.4s ease-in-out;
    
    justify-content: flex-start;
    align-items: center;

    perspective: 1000px;
}

/* Styling for individual cards */
.group-card {
    /* Set a fixed size for the main visible card */
    width: 300px; 
    height: 180px; 
    flex-shrink: 0;
    
    /* Position cards in 3D space */
    position: absolute;
    opacity: 0;
    
    /* ðŸš¨ FIX 3: Change 'top: 50%' to a calculated value (e.g., 20px from the top) to give space for the chop. */
    /* The height of the wrapper is 220px, card is 180px. 220-180 = 40px margin, so 20px top margin. */
    top: 20px; 
    
    /* The base translateY(-50%) must be removed because we are no longer using top: 50% for centering */
    transform: none;
    
    /* Adjusted transition to be smoother */
    transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out, z-index 0s 0.4s;
    
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 12px;
    background: #f7fafc; 
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    cursor: pointer;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.group-card h4 {
    font-size: 1.25rem;
    font-weight: 700;
    color: #2d3748;
    margin-bottom: 0.5rem;
}

.group-card p {
    color: #718096;
    font-size: 0.9rem;
}

/* ---------------------------------------------------- */
/* STATE CLASSES CONTROLLED BY JS */
/* ---------------------------------------------------- */

/* Card that is currently centered and in the foreground */
.card-center {
    opacity: 1;
    /* ðŸš¨ FIX 4: Removed translateY(-50%) from all transform states */
    transform: translate3d(0, 0, 0) scale(1); 
    z-index: 10;
    box-shadow: 0 8px 25px rgba(0,0,0,0.25);
    /* Ensures the card is centered horizontally */
    left: calc(50% - 150px);
}

/* Card that is peeking on the right (next card) */
.card-right-peek {
    opacity: 0.6;
    /* ðŸš¨ FIX 4: Removed translateY(-50%) from all transform states */
    transform: translate3d(180px, 0, -200px) scale(0.9);
    z-index: 5;
    pointer-events: none;
    /* Ensures the card is centered horizontally */
    left: calc(50% - 150px);
}

/* Card that is peeking on the left (previous card) */
.card-left-peek {
    opacity: 0.6;
    /* ðŸš¨ FIX 4: Removed translateY(-50%) from all transform states */
    transform: translate3d(-180px, 0, -200px) scale(0.9);
    z-index: 5;
    pointer-events: none;
    /* Ensures the card is centered horizontally */
    left: calc(50% - 150px);
}

/* All other cards are translated far away and hidden */
.card-hidden {
    opacity: 0;
    /* ðŸš¨ FIX 4: Removed translateY(-50%) from all transform states */
    transform: translate3d(0, 0, -500px) scale(0.5);
    z-index: 1;
    pointer-events: none;
    /* Ensures the card is centered horizontally */
    left: calc(50% - 150px);
}

/* Arrow Styling */
.carousel-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 20; 
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #3182CE;
    border: none;
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    cursor: pointer;
    font-size: 1.5rem;
    line-height: 40px;
    text-align: center;
    color: white;
    transition: background 0.2s;
}

.carousel-arrow:hover {
    background: #4299E1;
}

.carousel-arrow:disabled {
    background: #CBD5E0;
    cursor: default;
}

.left-arrow {
    left: 20px;
}

.right-arrow {
    right: 20px;
}

/* File: public/css/pages/main-page.css */

/* Remove this selector as it restricts the main page content from using full width
.container.mx-auto.p-6 {
    max-width: 1200px;
}
*/

/* BASE LAYOUT FOR MOBILE (Single Column - 100% width) */
.main-page-layout {
    display: grid;
    /* This ensures the grid container itself takes all available space */
    width: 100%;
    /* On small screens, the content stacks in a single column */
    grid-template-columns: 1fr; 
    gap: 1.5rem; /* Space between the profile and groups sections */
    padding: 1.5rem 1rem; /* Add overall padding to the page content */
    
    /* ADDED: Ensures the grid container takes up the remaining vertical space 
       inside the 'main' flex container, effectively pushing 'main' to its edges. */
    flex-grow: 1; 
}

/* DESKTOP LAYOUT (25% / 75% Columns) */
@media (min-width: 1024px) { /* Adjust breakpoint as needed, e.g., 1024px for desktop */
    .main-page-layout {
        /* Set two columns: 1 fraction unit (25%) and 3 fraction units (75%) */
        grid-template-columns: 1fr 3fr; /* This creates the 25%/75% split */
        gap: 2rem;
        max-width: 100%;
        padding: 2rem; /* Consistent desktop padding */
    }
}


/* Left Column: Profile Container (25% on desktop) */
.profile-section {
    padding: 0; /* No need for padding here */
    height: fit-content;
    /* On mobile/small screens, the profile takes up 100% of the single column */
}

/* Right Column: Groups Container (75% on desktop) */
.content-section {
    padding: 0; 
    /* ðŸš¨ FIX 1: Set a minimum height to ensure the content area is deep enough 
       to hold the carousel without vertical cropping. */
    min-height: 500px; 
}


.header {
    padding-bottom: 1.5rem;
    margin-bottom: 1.5rem;
    border-bottom: 1px solid #e5e7eb; /* Light separator */
}

.content-section {
    padding: 0 1.5rem 0 0; /* Add right padding to the 75% column for content spacing */
}

/* Base Layout Container */
.main-page-layout {
    /* ... (existing styles for grid and gap) ... */
    width: 100%;
    /* Remove padding from here as we'll add it to the profile/content sections */
    padding: 0; 
}

/* Left Column: Profile Container (25% on desktop) */
.profile-section {
    padding: 0 0 0 1.5rem; /* Add left padding to the 25% column */
    height: fit-content;
}

/* DESKTOP LAYOUT (25% / 75% Columns) */
@media (min-width: 1024px) {
    .main-page-layout {
        /* Set two columns: 1fr 3fr (25%/75%) */
        grid-template-columns: 1fr 3fr; 
        gap: 0; /* Set gap to zero to control spacing with padding on the children */
        max-width: 100%;
    }
    
    .profile-section {
        /* Maintain padding */
        padding: 2rem 1.5rem 2rem 2rem; /* Top Right Bottom Left */
    }

    .content-section {
        /* Add padding on the right column */
        padding: 2rem 2rem 2rem 1.5rem; /* Top Right Bottom Left */
        height: 100%;
    }
}
